{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Amazon Clone\\\\my-app\\\\src\\\\Form.js\";\nimport React from 'react';\nimport { Field, reduxForm, SubmissionError } from 'redux-form';\n\nfunction submitToServer() {\n  return fetch('https://localhost:5000/register', {\n    method: \"POST\",\n    headers: {\n      \"Content-type\": \"application/json\"\n    }\n  }).then(response => response.json()).then(json => {\n    return json;\n  }).catch(error => {\n    console.error(error);\n  });\n}\n\n;\n\nconst sub = ({\n  firstName = \"\",\n  lastName = \"\",\n  email = \"\",\n  password = \"\"\n}) => {\n  let error = {};\n  let isError = false;\n\n  if (firstName.trim() === \"\") {\n    error.firstName = \"Required\";\n    isError = true;\n  }\n\n  if (lastName.trim() === \"\") {\n    error.lastName = \"Required\";\n    isError = true;\n  }\n\n  if (email.trim() === \"\") {\n    error.email = \"Required\";\n    isError = true;\n  }\n\n  if (isError) {\n    throw new SubmissionError();\n  } else {\n    submitToServer({\n      firstName,\n      lastName,\n      email,\n      password\n    }).then(data => console.log(data));\n  }\n};\n\nfunction Form(props) {\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    method: \"post\",\n    onSubmit: props.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstName\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstName\",\n        component: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastName\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastName\",\n        component: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        component: \"input\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\",\n        component: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Form;\nForm = reduxForm({\n  // a unique name for the form\n  form: 'contact'\n})(Form);\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Amazon Clone/my-app/src/Form.js"],"names":["React","Field","reduxForm","SubmissionError","submitToServer","fetch","method","headers","then","response","json","catch","error","console","sub","firstName","lastName","email","password","isError","trim","data","log","Form","props","handleSubmit","form"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm, SubmissionError, } from 'redux-form'\r\n\r\n\r\nfunction submitToServer() {\r\n  return fetch('https://localhost:5000/register', {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    },\r\n    \r\n\r\n  })\r\n    .then((response) =>   response.json())\r\n    .then((json) => {\r\n      return json;\r\n    })\r\n    .catch((error) => {\r\n      console.error(error);\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\nconst sub = ({firstName=\"\",lastName=\"\",email=\"\", password=\"\"}) =>{\r\n\r\n    \r\nlet error = {}\r\nlet isError = false\r\n\r\n\r\n\r\n\r\n    if(firstName.trim() === \"\"){\r\n        error.firstName = \"Required\";\r\n        isError = true;\r\n    }\r\n    if(lastName.trim() === \"\"){\r\n        error.lastName = \"Required\";\r\n        isError = true;\r\n    }\r\n\r\n    if(email.trim() === \"\"){\r\n        error.email = \"Required\";\r\n        isError = true;\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    if(isError){\r\n        throw new SubmissionError()\r\n    } else{\r\n      submitToServer({firstName, lastName, email, password})\r\n      .then(data => console.log(data))\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nfunction Form(props){\r\n  \r\n  return (\r\n    <form method=\"post\" onSubmit={props.handleSubmit} >\r\n      <div>\r\n        <label htmlFor=\"firstName\">First Name</label>\r\n        <Field name=\"firstName\" component=\"input\" type=\"text\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastName\">Last Name</label>\r\n        <Field name=\"lastName\" component=\"input\" type=\"text\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field name=\"email\" component=\"input\" type=\"email\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field name=\"password\" component=\"input\" type=\"text\" />\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nForm = reduxForm({\r\n  // a unique name for the form\r\n  form: 'contact'\r\n})(Form)\r\n\r\nexport default Form\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
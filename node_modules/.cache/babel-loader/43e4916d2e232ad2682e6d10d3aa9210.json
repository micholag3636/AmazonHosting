{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Amazon Clone\\\\my-app\\\\src\\\\Form.js\";\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport axios from \"axios\";\n/*\r\nconst submitToServer = async (data) => {\r\n  try {\r\n    let response = await fetch(\r\n      'https://localhost:5000/contact'\r\n    , {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      },\r\n\r\n      body: JSON.stringify(data),\r\n    });\r\n    let json = await response.json();\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n*/\n\nfunction Form(props) {\n  function submit(event) {\n    const registered = {\n      firstname: event.firstname,\n      lastname: event.lastname,\n      email: event.email,\n      password: event.password\n    };\n    axios.post(\"http://localhost:5000/app/signup\", registered).then(response => console.log(response.data));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: props.handleSubmit(submit),\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"firstname\",\n        children: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"firstname\",\n        component: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"lastname\",\n        children: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"lastname\",\n        component: \"input\",\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"email\",\n        component: \"input\",\n        type: \"email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\",\n        component: \"input\",\n        type: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Form;\nForm = reduxForm({\n  // a unique name for the form\n  form: 'contact'\n})(Form);\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["C:/Users/user/Desktop/Amazon Clone/my-app/src/Form.js"],"names":["React","Field","reduxForm","axios","Form","props","submit","event","registered","firstname","lastname","email","password","post","then","response","console","log","data","handleSubmit","form"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,SAAhB,QAAiC,YAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAQA,SAASC,IAAT,CAAcC,KAAd,EAAoB;AAEpB,WAASC,MAAT,CAAgBC,KAAhB,EAAsB;AACpB,UAAMC,UAAU,GAAG;AACjBC,MAAAA,SAAS,EAAEF,KAAK,CAACE,SADA;AAEjBC,MAAAA,QAAQ,EAAEH,KAAK,CAACG,QAFC;AAGjBC,MAAAA,KAAK,EAAEJ,KAAK,CAACI,KAHI;AAIjBC,MAAAA,QAAQ,EAAEL,KAAK,CAACK;AAJC,KAAnB;AAMAT,IAAAA,KAAK,CAACU,IAAN,CAAW,kCAAX,EAA+CL,UAA/C,EACCM,IADD,CACMC,QAAQ,IAAIC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB,CADlB;AAKD;;AAMC,sBAGE;AAAM,IAAA,QAAQ,EAAEb,KAAK,CAACc,YAAN,CAAmBb,MAAnB,CAAhB;AAAA,4BAGE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,WAAZ;AAAwB,QAAA,SAAS,EAAC,OAAlC;AAA0C,QAAA,IAAI,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC,OAAjC;AAAyC,QAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAPF,eAWE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAoB,QAAA,SAAS,EAAC,OAA9B;AAAsC,QAAA,IAAI,EAAC;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAeE;AAAA,8BACE;AAAO,QAAA,OAAO,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,SAAS,EAAC,OAAjC;AAAyC,QAAA,IAAI,EAAC;AAA9C;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAfF,eAmBE;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAnBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAHF;AAyBD;;KA7CQF,I;AA+CTA,IAAI,GAAGF,SAAS,CAAC;AACf;AACAkB,EAAAA,IAAI,EAAE;AAFS,CAAD,CAAT,CAGJhB,IAHI,CAAP;AAKA,eAAeA,IAAf","sourcesContent":["import React from 'react'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport axios from \"axios\"\r\n\r\n/*\r\nconst submitToServer = async (data) => {\r\n  try {\r\n    let response = await fetch(\r\n      'https://localhost:5000/contact'\r\n    , {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-type\": \"application/json\"\r\n      },\r\n\r\n      body: JSON.stringify(data),\r\n    });\r\n    let json = await response.json();\r\n    return response.json();\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n};\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nfunction Form(props){\r\n  \r\nfunction submit(event){\r\n  const registered = {\r\n    firstname: event.firstname,\r\n    lastname: event.lastname,\r\n    email: event.email,\r\n    password: event.password\r\n  }\r\n  axios.post(\"http://localhost:5000/app/signup\", registered)\r\n  .then(response => console.log(response.data))\r\n\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n  \r\n  return (\r\n\r\n    \r\n    <form onSubmit={props.handleSubmit(submit)}>\r\n\r\n\r\n      <div>\r\n        <label htmlFor=\"firstname\">First Name</label>\r\n        <Field name=\"firstname\" component=\"input\" type=\"text\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"lastname\">Last Name</label>\r\n        <Field name=\"lastname\" component=\"input\" type=\"text\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"email\">Email</label>\r\n        <Field name=\"email\" component=\"input\" type=\"email\" />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"password\">Password</label>\r\n        <Field name=\"password\" component=\"input\" type=\"password\" />\r\n      </div>\r\n      <button type=\"submit\">Submit</button>\r\n    </form>\r\n  )\r\n}\r\n\r\nForm = reduxForm({\r\n  // a unique name for the form\r\n  form: 'contact'\r\n})(Form)\r\n\r\nexport default Form\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\Amazon Clone\\\\my-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport { createStore, combineReducers } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { reducer as formReducer } from 'redux-form';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nconst isLoggedIn = false;\nexport const changeToTrue = () => {\n  return {\n    type: \"LOGGEDIN\"\n  };\n};\nexport const changeToFalse = () => {\n  return {\n    type: \"LOGGEDOUT\"\n  };\n};\n\nconst change = (state = isLoggedIn, action) => {\n  switch (action.type) {\n    case \"LOGGEDIN\":\n      return state = true;\n\n    case \"LOGGEDOUT\":\n      return state = false;\n\n    default:\n      return state = state;\n  }\n};\n\nconst combined = combineReducers({\n  form: formReducer,\n  change: change\n});\nlet store = createStore(combined, window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f);\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals","map":{"version":3,"sources":["C:/Users/user/Desktop/Amazon Clone/my-app/src/index.js"],"names":["React","ReactDOM","App","createStore","combineReducers","Provider","reducer","formReducer","BrowserRouter","Router","Route","Switch","isLoggedIn","changeToTrue","type","changeToFalse","change","state","action","combined","form","store","window","__REDUX_DEVTOOLS_EXTENSION__","f","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,aAAP;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,SAAQC,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,SAASC,OAAO,IAAIC,WAApB,QAAuC,YAAvC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AAGA,MAAMC,UAAU,GAAG,KAAnB;AAGA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAChC,SAAO;AACPC,IAAAA,IAAI,EAAE;AADC,GAAP;AAID,CALM;AAOP,OAAO,MAAMC,aAAa,GAAG,MAAM;AACjC,SAAO;AACPD,IAAAA,IAAI,EAAE;AADC,GAAP;AAGD,CAJM;;AAMP,MAAME,MAAM,GAAG,CAACC,KAAK,GAAGL,UAAT,EAAoBM,MAApB,KAA8B;AAE3C,UAAOA,MAAM,CAACJ,IAAd;AAEE,SAAK,UAAL;AACA,aAAOG,KAAK,GAAG,IAAf;;AAGA,SAAK,WAAL;AACE,aAAOA,KAAK,GAAG,KAAf;;AAGA;AACA,aAAOA,KAAK,GAAGA,KAAf;AAXJ;AAoBD,CAtBD;;AA4BA,MAAME,QAAQ,GAAGf,eAAe,CAAC;AAC/BgB,EAAAA,IAAI,EAAEb,WADyB;AAE/BS,EAAAA,MAAM,EAAEA;AAFuB,CAAD,CAAhC;AASA,IAAIK,KAAK,GAAGlB,WAAW,CAACgB,QAAD,EAAaG,MAAM,CAACC,4BAAP,GAAsCD,MAAM,CAACC,4BAAP,EAAtC,GAA8EC,CAAC,IAAIA,CAAhG,CAAvB;AAaAvB,QAAQ,CAACwB,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEJ,KAAjB;AAAA,2BACA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAUEK,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAVF,E,CAmBA;AACA;AACA","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport {createStore,combineReducers} from \"redux\"\nimport {Provider} from \"react-redux\" \nimport { reducer as formReducer } from 'redux-form'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\"\n\n\nconst isLoggedIn = false\n\n\nexport const changeToTrue = () => {\n  return {\n  type: \"LOGGEDIN\"\n  }\n \n}\n\nexport const changeToFalse = () => {\n  return {\n  type: \"LOGGEDOUT\"\n  }\n}\n\nconst change = (state = isLoggedIn,action) =>{\n\n  switch(action.type){\n\n    case \"LOGGEDIN\": \n    return state = true\n\n\n    case \"LOGGEDOUT\":\n      return state = false\n      \n\n      default: \n      return state = state\n\n\n\n\n  }\n\n\n\n}\n\n \n\n\n\nconst combined = combineReducers({\n  form: formReducer,\n  change: change\n \n\n})\n\n\n\nlet store = createStore(combined ,  window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f)\n\n\n\n\n\n\n\n\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n\n\n    </Provider>\n\n  \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n\n\n\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"]},"metadata":{},"sourceType":"module"}